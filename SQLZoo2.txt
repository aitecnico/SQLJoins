
Part 6 JOIN:

1. The first example shows the goal scored by a player with the last name 'Bender'. The * says to list all the columns in the table - a shorter way of saying matchid, teamid, player, gtime. Modify it to show the matchid and player name for all goals scored by Germany. To identify German players, check for: teamid = 'GER'
SELECT matchid, player FROM goal
WHERE teamid = "GER"

2. From the previous query you can see that Lars Bender's scored a goal in game 1012. Now we want to know what teams were playing in that match. Notice in the that the column matchid in the goal table corresponds to the id column in the game table. We can look up information about game 1012 by finding that row in the game table. Show id, stadium, team1, team2 for just game 1012
SELECT id,stadium,team1,team2
FROM game
WHERE id = 1012

3. The code below shows the player (from the goal) and stadium name (from the game table) for every goal scored. Modify it to show the player, teamid, stadium and mdate and for every German goal.
SELECT player, teamid, stadium, mdate
FROM game JOIN goal ON (id=matchid)
WHERE teamid = "GER"

4. Show the team1, team2 and player for every goal scored by a player called Mario player LIKE 'Mario%'
SELECT team1, team2, player
FROM game JOIN goal ON (id=matchid)
WHERE player LIKE "Mario%"

5. Show player, teamid, coach, gtime for all goals scored in the first 10 minutes gtime<=10
SELECT player, teamid, coach, gtime
FROM goal  JOIN eteam on teamid=id
WHERE gtime<=10

6. List the the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.
SELECT mdate, teamname
FROM game JOIN eteam on team1 = eteam.id
WHERE coach= "Fernando Santos"

7. List the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'
SELECT player
FROM goal JOIN game ON matchid=id
WHERE stadium = 'National Stadium, Warsaw'

8. The example query shows all goals scored in the Germany-Greece quarterfinal. Instead show the name of all players who scored a goal against Germany.
SELECT DISTINCT player
FROM goal JOIN game ON matchid = id
WHERE (team1 = "GER" OR team2 = "GER") AND teamid != "GER"
Show teamname and the total number of goals scored.
SELECT teamname, count(teamid)
FROM eteam JOIN goal ON id = teamid
GROUP BY teamname

9. Show the stadium and the number of goals scored in each stadium.
SELECT stadium, COUNT(matchid)
FROM game JOIN goal ON id = matchid
GROUP BY stadium
For every match involving 'POL', show the matchid, date and the number of goals scored.
SELECT id, mdate, COUNT(matchid)
FROM goal
JOIN game ON matchid=id
WHERE team1 = "POL" OR team2 = "POL"
GROUP BY game.id, game.mdate

10. For every match where 'GER' scored, show matchid, match date and the number of goals scored by 'GER'
SELECT id, mdate, COUNT(teamid)
FROM game JOIN goal ON id = matchid
WHERE (team1='GER' OR team2='GER') AND teamid="GER"
GROUP BY game.id, game.mdate

11. List every match with the goals scored by each team as shown.
SELECT mdate, team1,
SUM(CASE WHEN game.team1 = goal.teamid
THEN 1
ELSE 0
END) as score1,
team2,
SUM(CASE WHEN game.team2 = goal.teamid
THEN 1
ELSE 0
END) as score2
FROM game LEFT JOIN goal ON game.id = goal.matchid
GROUP BY game.mdate, game.team1, game.team2
ORDER BY mdate, matchid, team1, team2



Part 7 MORE JOIN

1. List the films where the yr is 1962 [Show id, title]
SELECT id, title
FROM movie
WHERE yr = 1962;

2. Give year of 'Citizen Kane'.
SELECT yr
FROM movie
WHERE title = 'Citizen Kane';

3. List all of the Star Trek movies, include the id, title and yr
(all of these movies include the words Star Trek in the
title). Order results by year.
SELECT id, title, yr
FROM movie
WHERE title LIKE '%Star Trek%'
ORDER BY yr;

4. What are the titles of the films with id 11768, 11955, 21191.
SELECT title
FROM movie
WHERE id IN (11768, 11955, 21191);

5. What id number does the actor 'Glenn Close' have?
SELECT id
FROM actor
WHERE name = 'Glenn Close';

6. What is the id of the film 'Casablanca'
SELECT id
FROM movie
WHERE title = 'Casablanca';

7. Obtain the cast list for 'Casablanca'. Use the id value that
you obtained in the previous question.
SELECT actor.name
FROM actor
JOIN casting
ON casting.actorid = actor.id
WHERE casting.movieid = 11768;

8. Obtain the cast list for the film 'Alien'.
SELECT actor.name
FROM actor
JOIN casting
ON casting.actorid = actor.id
JOIN movie
ON movie.id = casting.movieid
WHERE movie.title = 'Alien';

9. List the films in which 'Harrison Ford' has appeared
SELECT movie.title
FROM movie
JOIN casting
ON casting.movieid = movie.id
JOIN actor
ON actor.id = casting.actorid
WHERE actor.name = 'Harrison Ford';

10. List the films where 'Harrison Ford' has appeared - but not in
the star role. [Note: the ord field of casting gives the position
of the actor. If ord=1 then this actor is in the starring role]
SELECT movie.title
FROM movie
JOIN casting
ON casting.movieid = movie.id
JOIN actor
ON actor.id = casting.actorid
WHERE actor.name = 'Harrison Ford'
AND casting.ord != 1;

11. List the films together with the leading star for all 1962 films.
SELECT movie.title, actor.name
FROM movie
JOIN casting
ON casting.movieid = movie.id
JOIN actor
ON actor.id = casting.actorid
WHERE movie.yr = 1962
AND casting.ord = 1;

12. Which were the busiest years for 'John Travolta', show the
year and the number of movies he made each year for any year in
which he made at least 2 movies.
SELECT movie.yr, COUNT(*)
FROM movie
JOIN casting
ON casting.movieid = movie.id
JOIN actor
ON actor.id = casting.actorid
WHERE actor.name = 'John Travolta'
GROUP BY movie.yr
HAVING COUNT(movie.title) >= 2;

13. List the film title and the leading actor for all of 'Julie
Andrews' films.
SELECT DISTINCT m.title, a.name
FROM (SELECT movie.*
FROM movie
JOIN casting
ON casting.movieid = movie.id
JOIN actor
ON actor.id = casting.actorid
WHERE actor.name = 'Julie Andrews') AS m
JOIN (SELECT actor.*, casting.movieid AS movieid
FROM actor
JOIN casting
ON casting.actorid = actor.id
WHERE casting.ord = 1) as a
ON m.id = a.movieid
ORDER BY m.title;

14. Obtain a list of actors in who have had at least 30 starring
roles.
SELECT actor.name
FROM actor
JOIN casting
ON casting.actorid = actor.id
WHERE casting.ord = 1
GROUP BY actor.name
HAVING COUNT(*) >= 30;

15. List the 1978 films by order of cast list size.
SELECT movie.title, COUNT(*)
FROM movie
JOIN casting
ON movie.id = casting.movieid
WHERE movie.yr = 1978
GROUP BY movie.id
ORDER BY COUNT(*) DESC

16. List all the people who have worked with 'Art Garfunkel'.
SELECT a.name
FROM (SELECT movie.*
FROM movie
JOIN casting
ON casting.movieid = movie.id
JOIN actor
ON actor.id = casting.actorid
WHERE actor.name = 'Art Garfunkel') AS m
JOIN (SELECT actor.*, casting.movieid
FROM actor
JOIN casting
ON casting.actorid = actor.id
WHERE actor.name != 'Art Garfunkel') as a
ON m.id = a.movieid;

